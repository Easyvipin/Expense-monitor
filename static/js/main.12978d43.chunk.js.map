{"version":3,"sources":["Components/dollar.png","Components/grocery.jpg","Components/rent.jpg","Components/bills.jpg","Components/school.jpg","Components/Total.js","Components/Manage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Total","state","money","message","permission","handleOnChange","e","console","log","target","value","setState","handleOnSubmit","preventDefault","props","startManage","className","src","dollar","alt","onSubmit","this","type","name","onChange","id","placeholder","Component","Manage","cost","totalCost","fraction","expense","Grocery","bills","fees","rent","savings","handleChange","isNaN","parseInt","sum","progressBar","document","querySelector","setProgress","setAttribute","handlePdf","input","getElementById","html2canvas","then","canvas","imgData","toDataURL","pdf","jsPDF","width","internal","pageSize","getWidth","height","getHeight","addImage","save","data-percent","data-color","grocery","school","onKeyUp","onClick","App","stepOne","stepTwo","display","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.12978d43.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dollar.89ca6dd0.png\";","module.exports = __webpack_public_path__ + \"static/media/grocery.d0f656d2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rent.8eee8245.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bills.a84459af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/school.662367fe.jpg\";","import React, { Component } from \"react\";\r\nimport dollar from \"./dollar.png\";\r\nclass Total extends Component {\r\n  state = {\r\n    money: \"\",\r\n    message: \"\",\r\n    permission: \"no\",\r\n  };\r\n  handleOnChange = (e) => {\r\n    console.log(e.target.value);\r\n    if (e.target.value == \"\") {\r\n      this.setState({\r\n        message: \"Enter the Amount  \",\r\n        permission: \"no\",\r\n      });\r\n    }\r\n    if (e.target.value < 100) {\r\n      this.setState({\r\n        message: \"Monitor will not work this amount \",\r\n        permission: \"no\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        message: \"You Rich Fella \",\r\n        permission: \"go\",\r\n      });\r\n    }\r\n    this.setState({\r\n      money: e.target.value,\r\n    });\r\n  };\r\n  handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.permission == \"go\") {\r\n      this.props.startManage(this.state.money);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"brand\">\r\n          <h1>Manage Your Expense</h1>\r\n        </div>\r\n        <div className=\"wrapper\">\r\n          {/*top container */}\r\n\r\n          <div className=\"top-container\">\r\n            <div className=\"title-head\">\r\n              <h1>Expense-Monitor</h1>\r\n            </div>\r\n            <div className=\"title-sub\">\r\n              <p>Money in your Pocket?</p>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Money - box */}\r\n\r\n          <div className=\"money-box\">\r\n            <div className=\"money-box box-a\">\r\n              <img src={dollar} alt=\"\" />\r\n            </div>\r\n\r\n            <div className=\"money-box box-b\">\r\n              <form onSubmit={this.handleOnSubmit} className=\"allCost\">\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"totalcost\"\r\n                  onChange={this.handleOnChange}\r\n                  id=\"totalcost\"\r\n                  placeholder=\"$$$\"\r\n                />\r\n                <button type=\"Submit\">Start Monitor</button>\r\n              </form>\r\n              <div className=\"message\">\r\n                <p>{this.state.message} </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Total;\r\n","import React, { Component } from \"react\";\r\nimport grocery from \"./grocery.jpg\";\r\nimport rent from \"./rent.jpg\";\r\nimport bills from \"./bills.jpg\";\r\nimport school from \"./school.jpg\";\r\nimport * as jsPDF from \"jspdf\";\r\nimport * as html2canvas from \"html2canvas\";\r\n\r\nclass Manage extends Component {\r\n  state = {\r\n    cost: this.props.totalCost,\r\n    fraction: \"\",\r\n    expense: {\r\n      Grocery: 0,\r\n      bills: 0,\r\n      fees: 0,\r\n      rent: 0,\r\n    },\r\n    savings: this.props.totalCost,\r\n    message: \"Money is valuable\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    if (isNaN(parseInt(e.target.value))) {\r\n      e.target.value = \"\";\r\n      this.setState({\r\n        message: \"type no only\",\r\n      });\r\n      /* to add 0 when the characters are invalid  */\r\n      this.setState(\r\n        {\r\n          expense: {\r\n            ...this.state.expense,\r\n            [e.target.name]: 0,\r\n          },\r\n        },\r\n        () => {\r\n          let sum = 0;\r\n          const { Grocery, bills, fees, rent } = this.state.expense;\r\n          sum = Grocery + bills + fees + rent;\r\n          this.setState({\r\n            savings: this.props.totalCost - sum,\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      /* to handle when input is valid */\r\n      this.setState(\r\n        {\r\n          expense: {\r\n            ...this.state.expense,\r\n            [e.target.name]: parseInt(e.target.value),\r\n          },\r\n        },\r\n        () => {\r\n          let sum = 0;\r\n          let fraction = 0;\r\n          const progressBar = document.querySelector(\".progress\");\r\n          const { Grocery, bills, fees, rent } = this.state.expense;\r\n          sum = Grocery + bills + fees + rent;\r\n\r\n          /* progress bar  */\r\n\r\n          const setProgress = () => {\r\n            fraction = sum / this.props.totalCost;\r\n            if (fraction >= 0.25 && fraction < 0.5) {\r\n              this.setState({\r\n                fraction: \"fourth\",\r\n              });\r\n              console.log(fraction);\r\n              /* setting the prog bar  */\r\n\r\n              progressBar.setAttribute(\"data-percent\", \"fourth\");\r\n            } else if (fraction >= 0.5 && fraction < 0.75) {\r\n              this.setState({\r\n                fraction: \"half\",\r\n              });\r\n              console.log(fraction);\r\n              progressBar.setAttribute(\"data-percent\", \"half\");\r\n            } else if (fraction >= 0.75 && fraction < 1) {\r\n              this.setState({\r\n                fraction: \"extra\",\r\n              });\r\n              console.log(fraction);\r\n              progressBar.setAttribute(\"data-percent\", \"extra\");\r\n            } else if (fraction == 1) {\r\n              this.setState({\r\n                fraction: \"full\",\r\n              });\r\n              console.log(fraction);\r\n              progressBar.setAttribute(\"data-percent\", \"full\");\r\n            } else if (sum > this.props.totalCost) {\r\n              this.setState({\r\n                fraction: \"over\",\r\n              });\r\n              progressBar.setAttribute(\"data-percent\", \"over\");\r\n            } else if (\r\n              fraction > 0 &&\r\n              fraction < 0.25 &&\r\n              sum < this.props.totalCost\r\n            ) {\r\n              this.setState({\r\n                fraction: \"empty\",\r\n              });\r\n              progressBar.setAttribute(\"data-percent\", \"empty\");\r\n            }\r\n          };\r\n\r\n          if (sum > this.props.totalCost) {\r\n            this.setState(\r\n              {\r\n                savings: this.props.totalCost - sum,\r\n                message: \"Exceeding the Total cost\",\r\n              },\r\n              setProgress\r\n            );\r\n\r\n            /* remove the print button */\r\n            /* post error */\r\n          } else {\r\n            this.setState(\r\n              {\r\n                savings: this.props.totalCost - sum,\r\n                message: \"Savings, Great !\",\r\n              },\r\n              setProgress\r\n            );\r\n          }\r\n          /* fraction set */\r\n        }\r\n      );\r\n    }\r\n  };\r\n  /* generate pdf */\r\n  handlePdf = () => {\r\n    const input = document.getElementById(\"main-box\");\r\n\r\n    html2canvas(input).then((canvas) => {\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n      const pdf = new jsPDF(\"p\", \"px\", \"a4\");\r\n      var width = pdf.internal.pageSize.getWidth();\r\n      var height = pdf.internal.pageSize.getHeight();\r\n\r\n      pdf.addImage(imgData, \"JPEG\", 0, 0, width, height);\r\n      pdf.save(\"Monthly expense.pdf\");\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Manage-container\" id=\"main-box\">\r\n        <div className=\"filler\">\r\n          <div className=\"progress-bucket\">\r\n            <div className=\"progress\" data-percent=\"0\" data-color=\"green\"></div>\r\n          </div>\r\n          <div className=\"savings\">\r\n            <h1 id=\"save\"> Save ${this.state.savings}</h1>\r\n          </div>\r\n        </div>\r\n        {/* COST -BOX */}\r\n\r\n        <div className=\"cost-box\">\r\n          {/* TOP-CONTAINER  */}\r\n\r\n          <div className=\"top-container\">\r\n            <div className=\"title-head\">\r\n              <h1>Expense-Monitor</h1>\r\n            </div>\r\n            <div className=\"title-sub\">\r\n              <p>Check out the filler to make Savings</p>\r\n            </div>\r\n          </div>\r\n\r\n          <form className=\"item-box\">\r\n            <div className=\"item-box-a\">\r\n              <div className=\"box-header\">\r\n                <img src={grocery} alt=\"grocery\" id=\"item-img\" />\r\n              </div>\r\n\r\n              <h2>Grocery</h2>\r\n              <input\r\n                type=\"number\"\r\n                className=\"item-cost\"\r\n                name=\"Grocery\"\r\n                placeholder=\"$\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"item-box-a\">\r\n              <div className=\"box-header\">\r\n                <img src={bills} alt=\"bills\" id=\"item-img\" />\r\n              </div>\r\n              <h2>bills</h2>\r\n              <input\r\n                type=\"number\"\r\n                className=\"item-cost\"\r\n                name=\"bills\"\r\n                placeholder=\"$\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"item-box-a\">\r\n              <div className=\"box-header\">\r\n                <img src={school} alt=\"fees\" id=\"item-img\" />\r\n              </div>\r\n\r\n              <h2>fees</h2>\r\n              <input\r\n                type=\"number\"\r\n                className=\"item-cost\"\r\n                name=\"fees\"\r\n                placeholder=\"$\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"item-box-a\">\r\n              <div className=\"box-header\">\r\n                <img src={rent} alt=\"rent\" id=\"item-img\" />\r\n              </div>\r\n\r\n              <h2>Rent</h2>\r\n              <input\r\n                type=\"number\"\r\n                className=\"item-cost\"\r\n                name=\"rent\"\r\n                placeholder=\"$\"\r\n                onKeyUp={this.handleChange}\r\n              />\r\n            </div>\r\n          </form>\r\n          <div className=\"bottom-container\">\r\n            <div className=\"message\">\r\n              <p>\"{this.state.message}\"</p>\r\n            </div>\r\n            <div>\r\n              <button className=\"screen\" onClick={this.handlePdf}>\r\n                Take a screenshot\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Manage;\r\n","import React, { Component } from \"react\";\n\nimport \"./App.css\";\nimport \"./styles/total.css\";\nimport \"./styles/manage.css\";\nimport Total from \"./Components/Total\";\nimport Manage from \"./Components/Manage\";\n\nclass App extends Component {\n  state = {\n    totalCost: \"\",\n    stepOne: \"True\",\n    stepTwo: \"False\",\n  };\n  startManage = (totalCost) => {\n    this.setState({\n      totalCost: totalCost,\n      stepOne: \"False\",\n      stepTwo: \"True\",\n    });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.stepOne === \"True\" ? (\n          <Total\n            totalCost={this.state.totalCost}\n            startManage={this.startManage}\n          />\n        ) : (\n          <Manage\n            display={this.state.display}\n            totalCost={this.state.totalCost}\n          />\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}